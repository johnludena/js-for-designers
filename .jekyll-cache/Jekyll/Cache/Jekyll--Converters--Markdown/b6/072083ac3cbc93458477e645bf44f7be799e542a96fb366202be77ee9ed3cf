I"*<p>If you ever tried to learn Javascript on your own and lurked around a developers’ community (i.e. Stack Overflow), chances are you’ve heard of “the DOM.”</p>

<p>But do you know exactly <em>what</em> it is? And more importantly, WHY it’s so damn important when learning Javascript as a designer?</p>

<p>Well, that’s exactly what we’ll be covering in this post. You’ll finally understand what the heck your smug developer friend is talking about next time he decides to throw a casual “DOM” around at your next meeting.</p>

<p>Sound good? Read on…</p>

<h2 id="enter-the-dom">Enter “the DOM”</h2>

<p>Javascript developers love to throw this term around because it makes them feel smart.</p>

<p>OK, not really. But it’s <em>really</em> helpful when trying to explain how to do something in Javascript.</p>

<p>Well, what the heck is the DOM anyways? Well, first of all, DOM stands for <strong>Document Object Model</strong>.</p>

<p>OK, great. But what does that all mean <em>really</em>?</p>

<p>The DOM is <strong>the code that gets compiled by the browser from all your HTML, CSS, and Javascript files and outputted to the screen</strong>. Developers usually refer this as the browser “painting” a picture on screen.</p>

<p>Let’s break that down a bit though…</p>

<p>Picture a tree with lots of branches going upwards to the sky. Well, the DOM is a lot like that. In fact, you could say that the DOM <em>is</em> in fact, a virtual tree that’s created from all your source code.</p>

<div class="media image" data-animation="fadeInUp">

	

		<img src="/images/content/DOM-tree.jpg" alt="" />
	

	

</div>

<h2 id="a-real-code-example">A real code example</h2>

<p>Let’s say I had a simple HTML file that looks like this:</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;html&gt;</span>
	<span class="nt">&lt;head&gt;</span>
		<span class="nt">&lt;title&gt;</span>My awesome page title<span class="nt">&lt;/title&gt;</span>
		<span class="nt">&lt;meta</span> <span class="na">name=</span><span class="s">"description"</span> <span class="na">content=</span><span class="s">"An introduction to the DOM"</span><span class="nt">&gt;</span>
		<span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"js/my-javascript-file.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
	<span class="nt">&lt;/head&gt;</span>
	<span class="nt">&lt;body&gt;</span>
		<span class="nt">&lt;div&gt;</span>
			<span class="nt">&lt;h1&gt;</span>Page title<span class="nt">&lt;/h1&gt;</span>
		<span class="nt">&lt;/div&gt;</span>
		<span class="nt">&lt;div&gt;</span>
			<span class="nt">&lt;div&gt;</span>
				<span class="nt">&lt;p&gt;</span>Some paragraph.<span class="nt">&lt;/p&gt;</span>
				<span class="nt">&lt;p&gt;</span>Another paragraph.<span class="nt">&lt;/p&gt;</span>
				<span class="nt">&lt;img</span> <span class="na">src=</span><span class="s">"images/some-image.jpg"</span> <span class="nt">/&gt;</span>
			 <span class="nt">&lt;/div&gt;</span>
			 <span class="nt">&lt;ul&gt;</span>
				<span class="nt">&lt;li&gt;</span>A list item<span class="nt">&lt;/li&gt;</span>
				<span class="nt">&lt;li&gt;</span>A list item<span class="nt">&lt;/li&gt;</span>
				<span class="nt">&lt;li&gt;</span>A list item<span class="nt">&lt;/li&gt;</span>
			<span class="nt">&lt;/ul&gt;</span>
		<span class="nt">&lt;/div&gt;</span>
	<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span></code></pre></figure>

<p>Here is what this would look like once the browser runs this block of code and creates a little DOM tree for us:</p>

<div class="media image" data-animation="fadeInUp">

	

		<img src="/images/content/DOM-tree-example.jpg" alt="" />
	

	

</div>

<p>As you can see, your tree has a bunch of different branches that each extend as children of other branches. And at the end of each branch is an <code class="language-plaintext highlighter-rouge">html</code> tag (e.g. <code class="language-plaintext highlighter-rouge">div</code>, <code class="language-plaintext highlighter-rouge">p</code>, <code class="language-plaintext highlighter-rouge">li</code>, etc). We could say these make up the leaves of our little tree.</p>

<p>Now, of course, these trees can get <em>pretty</em> massive. Just imagine a massive web app or complicated website (e.g. Facebook).</p>

<p>However, no matter how big or small your DOM tree, they all start out the same: The <code class="language-plaintext highlighter-rouge">document</code> is the root and it’s where all your HTML tags start branching out from. We’ll talk a bit more about this mysterious <code class="language-plaintext highlighter-rouge">document</code> root on another post, but just understand for now that every DOM tree starts with this as the base and then uses all your <code class="language-plaintext highlighter-rouge">html</code> tags to create the branches and leaves of your DOM tree.</p>

<h2 id="one-important-point-the-dom-is-not-just-your-html-file">One important point: The DOM is NOT just your .html file!</h2>

<p>I struggled wrapping my mind around this concept when I first started learning Javascript.</p>

<p>For the longest time, I used to confuse the DOM with my actual source code (the code you write in an HTML file for example).</p>

<p>However, the DOM is not exactly <em>just</em> the HTML code you write.</p>

<p>Here’s an example to help you understand things better. Let’s pretend I have an HTML file with <code class="language-plaintext highlighter-rouge">p</code> tag in the body and nothing else. This paragraph has a class called ‘blue.’</p>

<figure class="highlight"><pre><code class="language-html" data-lang="html"><span class="nt">&lt;p</span> <span class="na">class=</span><span class="s">"blue"</span><span class="nt">&gt;</span>You are learning Javascript!<span class="nt">&lt;/p&gt;</span></code></pre></figure>

<p>Now, inside my CSS file, I have a class called <code class="language-plaintext highlighter-rouge">blue</code> that will show the paragraph in blue.</p>

<p>No biggie, right?</p>

<p>HOWEVER, I also have a CSS style for a paragraph that contains both the class <code class="language-plaintext highlighter-rouge">blue</code> and <code class="language-plaintext highlighter-rouge">active</code>. This style will not only turn the paragraph blue, but <strong>it will also underline it.</strong></p>

<p>Now, I’m going to use a tiny bit of Javascript to add a CSS class to our paragraph (don’t freak out, we’ll be talking in detail about the basics of what’s happening here in another lesson).</p>

<p>Let’s use a live pen demo so you can see how this works:</p>

<div class="media codepen" data-animation="fadeInUp">

	<p data-height="260" data-theme-id="0" data-slug-hash="dJKZKr" data-default-tab="html,result" data-user="johnludena" data-embed-version="2" data-pen-title="Javascript  101: DOM Example" class="codepen">See the Pen <a href="https://codepen.io/johnludena/pen/dJKZKr/">Javascript  101: DOM Example</a> by John Ludena (<a href="https://codepen.io/johnludena">@johnludena</a>) on <a href="https://codepen.io">CodePen</a>.</p>
	<script async="" src="https://production-assets.codepen.io/assets/embed/ei.js"></script>

	

</div>

<p>If you’ve never used CodePen before, it’s a super cool web app to play around with code online quickly without having to necessarily create a local project on your computer. And most “Pens” are just three simple files: an HTML file, a CSS file, and a Javascript file.</p>

<p>But wait, what exactly is going on in the Javascript file?</p>

<p>Just take my word for it for the time being, but those two lines ADD a CSS class called ‘active’ to our existing paragraph with a class ‘blue’. In other words, the “picture” that the browser will finally end up “painting on screen” once the page loads will now have TWO classes: <code class="language-plaintext highlighter-rouge">blue</code> and <code class="language-plaintext highlighter-rouge">active</code></p>

<div class="media image" data-animation="fadeInUp">

	

		<img src="/images/content/DOM-console.jpg" alt="" />
	

	
		<div class="caption" data-animation="fadeInUp">
		  
		  

		  
		  	<p>Looking at the DOM using Google Chrome's developer tools</p>
		  

		  

		</div>
	

</div>

<p>Got it? <strong>Your own HTML code alone is NOT the DOM.</strong> The DOM is the final HTML picture your browser paints once ALL your files (yes, your Javascript files as well) are read and compiled.</p>

<h2 id="conclusion">Conclusion</h2>
<p>I hope that now you finally understand a little more about the basics of creating all interactivity in Javascript by first understanding what the DOM is and how it is created.</p>

<p>If you want some more where that came from, make sure to sign up for my upcoming <strong>FREE</strong> Javascript for Designers crash course below.</p>

<!-- Newsletter call-to-action -->
<div class="cta-form" data-animation="fadeInRightBig">
  
    <!-- Begin MailChimp Signup Form -->
    <div class="mc_embed_signup">

    	<h3>Subscribe below to receive more articles like this one straight to your inbox.</h3>

	    <form action="//boldpixelmedia.us5.list-manage.com/subscribe/post-json?u=d6c6ce7da87357b90e9859e81&amp;id=2091bdd722&amp;c=?" method="post" id="mc-embedded-subscribe-form" name="mc-embedded-subscribe-form" class="validate" target="_blank" novalidate="">
	        <div id="mc_embed_signup_scroll">
			    <!-- <div class="indicates-required"><span class="asterisk">*</span> indicates required</div> -->
			    
			    <div class="mc-field-group">
			  		<label for="mce-FNAME">First Name </label>
			  		<input type="text" value="" name="FNAME" class="required" id="mce-FNAME" />
			    </div>
			    <div class="mc-field-group">
			  	<label for="mce-EMAIL">Email Address
			  	</label>
			  	<input type="email" value="" name="EMAIL" class="required email" id="mce-EMAIL" />
			  	</div>
				 
			    <p class="error-message">Please fill out the fields above.</p>

		        <div style="position: absolute; left: -5000px;" aria-hidden="true"><input type="text" name="b_d6c6ce7da87357b90e9859e81_2091bdd722" tabindex="-1" value="" /></div>
		        <div class="clear"><input type="submit" value="Yes, I want in!" name="subscribe" id="mc-embedded-subscribe" class="cta-btn" /></div>
	      	</div>
	  	</form>

    </div>
    <!--End mc_embed_signup-->

    <div class="success-message">
		<svg class="checkmark" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 52 52"><circle class="checkmark__circle" cx="26" cy="26" r="25" fill="none" /><path class="checkmark__check" fill="none" d="M14.1 27.2l7.1 7.2 16.7-16.8" /></svg>

		<p>Success! Click the verify link in the email I just sent you to complete your registration.</p>
	</div>

    
</div>

:ET